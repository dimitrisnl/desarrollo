generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model Role {
  name String @id

  memberships Membership[]

  @@map(name: "roles")
}

model Org {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  memberships Membership[]

  @@map(name: "orgs")
}

model Membership {
  id Int @id @default(autoincrement())

  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @map(name: "user_id")
  org      Org    @relation(fields: [orgId], references: [id])
  orgId    Int    @map(name: "org_id")
  role     Role   @relation(fields: [roleName], references: [name])
  roleName String @map(name: "role_name")

  @@map(name: "memberships")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  emailVerified DateTime? @map(name: "email_verified")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  membership Membership?

  @@map(name: "users")
}
